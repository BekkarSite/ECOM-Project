<?php
// Ensure $BASE_PATH is available if footer is included standalone
if (!isset($BASE_PATH)) {
    $docRoot = isset($_SERVER['DOCUMENT_ROOT']) ? str_replace('\\', '/', realpath($_SERVER['DOCUMENT_ROOT'])) : '';
    $projRoot = str_replace('\\', '/', realpath(__DIR__ . '/../../../'));
    $baseUri = '';
    if ($docRoot && $projRoot && strpos($projRoot, $docRoot) === 0) {
        $baseUri = rtrim(substr($projRoot, strlen($docRoot)), '/');
    }
    $BASE_PATH = $baseUri ? '/' . ltrim($baseUri, '/') : '';
}
?><!-- public_footer.php -->
<footer class="bg-dark text-white mt-5">
    <div class="container py-5">
        <div class="row g-4">
            <div class="col-12 col-md-4">
                <?php
                require_once __DIR__ . '/../../helpers/settings.php';
                require_once __DIR__ . '/../../../config/db.php';
                $footerLogoPath = get_setting($conn, 'site_logo', 'assets/images/logo.png');
                $companyPhone = get_setting($conn, 'company_phone', '+1 234 567 890');
                $companyAddress = get_setting($conn, 'company_address', '123 Main Street, City, Country');
                ?>
                <a href="index.php" class="d-inline-block mb-3">
                    <img src="<?= $BASE_PATH ?>/<?php echo htmlspecialchars($footerLogoPath, ENT_QUOTES, 'UTF-8'); ?>" alt="Logo" class="img-fluid" style="max-height:48px">
                </a>
                <p class="mb-1"><i class="fa fa-phone me-2"></i> <?php echo htmlspecialchars($companyPhone, ENT_QUOTES, 'UTF-8'); ?></p>
                <p class="mb-0"><i class="fa fa-map-marker-alt me-2"></i> <?php echo htmlspecialchars($companyAddress, ENT_QUOTES, 'UTF-8'); ?></p>
            </div>
            <div class="col-6 col-md-2">
                <h5 class="text-warning">Company</h5>
                <ul class="list-unstyled">
                    <li><a class="text-white text-decoration-none" href="about.php">About Us</a></li>
                    <li><a class="text-white text-decoration-none" href="contact.php">Contact</a></li>
                    <li><a class="text-white text-decoration-none" href="privacy.php">Privacy Policy</a></li>
                    <li><a class="text-white text-decoration-none" href="terms.php">Terms of Service</a></li>
                </ul>
            </div>
            <div class="col-6 col-md-3">
                <h5 class="text-warning">Follow Us</h5>
                <ul class="list-unstyled">
                    <?php
                    $socials = [
                        ['key' => 'facebook',  'icon' => 'fa-brands fa-facebook',  'label' => 'Facebook'],
                        ['key' => 'twitter',   'icon' => 'fa-brands fa-twitter',   'label' => 'Twitter'],
                        ['key' => 'instagram', 'icon' => 'fa-brands fa-instagram', 'label' => 'Instagram'],
                        ['key' => 'youtube',   'icon' => 'fa-brands fa-youtube',   'label' => 'YouTube'],
                        ['key' => 'linkedin',  'icon' => 'fa-brands fa-linkedin',  'label' => 'LinkedIn'],
                        ['key' => 'tiktok',    'icon' => 'fa-brands fa-tiktok',    'label' => 'TikTok'],
                        ['key' => 'telegram',  'icon' => 'fa-brands fa-telegram',  'label' => 'Telegram'],
                        ['key' => 'pinterest', 'icon' => 'fa-brands fa-pinterest', 'label' => 'Pinterest'],
                    ];
                    foreach ($socials as $s) {
                        $url = trim((string)get_setting($conn, 'social_' . $s['key'], ''));
                        $enabled = get_setting($conn, 'social_' . $s['key'] . '_enabled', '1');
                        if ($enabled === '1' && $url !== '') {
                            $h = htmlspecialchars($url, ENT_QUOTES, 'UTF-8');
                            $label = htmlspecialchars($s['label'], ENT_QUOTES, 'UTF-8');
                            $icon = $s['icon'];
                            echo '<li><a class="text-white text-decoration-none" href="' . $h . '" target="_blank" rel="noopener noreferrer"><i class="' . $icon . ' me-2"></i>' . $label . '</a></li>';
                        }
                    }
                    ?>
                </ul>
            </div>
            <div class="col-12 col-md-3">
                <h5 class="text-warning">Newsletter</h5>
                <form action="subscribe.php" method="POST">
                    <label for="newsletter-email" class="visually-hidden">Email</label>
                    <div class="input-group">
                        <input type="email" id="newsletter-email" name="email" class="form-control" placeholder="Enter your email" required>
                        <button class="btn btn-warning" type="submit">Subscribe</button>
                    </div>
                </form>
            </div>
        </div>
        <div class="row mt-4 pt-3 border-top border-secondary align-items-center">
            <div class="col-12 col-md-6 mb-3 mb-md-0 d-flex align-items-center gap-3">
                <?php $companyName = get_setting($conn, 'company_name', 'My eCommerce Store'); ?>
                <p class="mb-0">&copy; <?php echo date('Y'); ?> <?php echo htmlspecialchars($companyName, ENT_QUOTES, 'UTF-8'); ?>. All rights reserved.</p>
                <?php
                  $waEnabled = get_setting($conn, 'whatsapp_enabled', '0');
                  $waNumber  = trim((string)get_setting($conn, 'whatsapp_number', ''));
                  if ($waEnabled === '1' && $waNumber !== ''):
                    $waLink = 'https://wa.me/' . preg_replace('/\D+/', '', $waNumber);
                ?>
                  <a href="<?php echo htmlspecialchars($waLink, ENT_QUOTES, 'UTF-8'); ?>" class="btn btn-success btn-sm" target="_blank" rel="noopener noreferrer" title="Chat on WhatsApp">
                    <i class="fab fa-whatsapp me-1"></i> WhatsApp
                  </a>
                <?php endif; ?>
            </div>
            <div class="col-12 col-md-6 d-flex justify-content-md-end align-items-center">
                <div class="me-3 d-none d-md-block">
                    <span class="me-2">We accept</span>
                    <div class="d-inline-flex align-items-center gap-3 fs-4 text-secondary">
                        <i class="fab fa-cc-visa" aria-label="Visa" title="Visa"></i>
                        <i class="fab fa-cc-mastercard" aria-label="Mastercard" title="Mastercard"></i>
                        <i class="fab fa-cc-amex" aria-label="American Express" title="American Express"></i>
                        <i class="fab fa-cc-discover" aria-label="Discover" title="Discover"></i>
                        <i class="fab fa-cc-paypal" aria-label="PayPal" title="PayPal"></i>
                    </div>
                </div>
                <a href="#top" class="btn btn-outline-light btn-sm"><i class="fa fa-arrow-up me-1"></i> Back to top</a>
            </div>
        </div>
    </div>
</footer>
<script>window.BASE_PATH = '<?= $BASE_PATH ?>';</script>
<script src="<?= $BASE_PATH ?>/assets/js/bootstrap.bundle.min.js"></script>
<script src="<?= $BASE_PATH ?>/assets/js/custom/add_to_cart.js"></script>
<script src="<?= $BASE_PATH ?>/assets/js/custom/cart.js"></script>
<script src="<?= $BASE_PATH ?>/assets/js/custom/search_suggest.js"></script>
<?php
  // Live chat widget toggle
  $chatEnabled = get_setting($conn, 'live_chat_enabled', '0');
  if ($chatEnabled === '1'):
?>
<style>
  .chat-widget { position: fixed; right: 16px; bottom: 16px; z-index: 1050; }
  .chat-button { border: none; border-radius: 999px; box-shadow: 0 6px 16px rgba(0,0,0,.2); background:#0ea5e9; color:#fff; width:56px; height:56px; display:grid; place-items:center; }
  .chat-panel { width: 320px; max-width: calc(100vw - 32px); height: 420px; border-radius: 12px; overflow: hidden; box-shadow: 0 8px 24px rgba(0,0,0,.25); display:none; }
  .chat-header { background:#0ea5e9; color:#001221; padding:10px 12px; display:flex; justify-content:space-between; align-items:center; }
  .chat-body { background:#fff; height: calc(420px - 48px - 56px); overflow:auto; padding:10px; }
  .chat-footer { background:#f8fafc; padding:8px; display:flex; gap:6px; }
  .chat-msg { margin-bottom:8px; display:flex; }
  .chat-msg .bubble { padding:8px 10px; border-radius:10px; max-width:80%; }
  .chat-msg.user { justify-content:flex-start; }
  .chat-msg.user .bubble { background:#f3f4f6; }
  .chat-msg.admin { justify-content:flex-end; }
  .chat-msg.admin .bubble { background:#e0f2fe; }
</style>
<div class="chat-widget" id="chatWidget">
  <div class="chat-panel bg-white" id="chatPanel">
    <div class="chat-header">
      <strong>Live Chat</strong>
      <button type="button" id="chatClose" class="btn btn-sm btn-light">×</button>
    </div>
    <div class="chat-body" id="chatMessages"></div>
    <div class="chat-footer">
      <input type="text" id="chatInput" class="form-control" placeholder="Type a message...">
      <button class="btn btn-light" id="chatEmoji" title="Emoji" type="button">😊</button>
      <button class="btn btn-primary" id="chatSend">Send</button>
    </div>
  </div>
  <button class="chat-button" id="chatToggle" aria-label="Open chat"><i class="fa fa-comments"></i></button>
</div>
<script>
(function(){
  const api = '<?= $BASE_PATH ?>/api/chat.php';
  let lastId = 0;
  let open = false;
  let active = false; // chat started flag (after identity if required)
  let requireName = false, requireEmail = false;

  function e(s){ const d=document.createElement('div'); d.innerText=s; return d.innerHTML; }

  function enableComposer(enabled){
    document.getElementById('chatInput').disabled = !enabled;
    document.getElementById('chatSend').disabled = !enabled;
    document.getElementById('chatEmoji').disabled = !enabled;
  }

  function showPre(nameReq, emailReq){
    const pre = document.getElementById('chatPre');
    pre.style.display = 'block';
    document.getElementById('chatPreHint').textContent = (nameReq && emailReq) ? 'Please enter your name and email to start chat.' : (nameReq ? 'Please enter your name to start chat.' : (emailReq ? 'Please enter your email to start chat.' : ''));
    enableComposer(false);
  }

  function hidePre(){
    const pre = document.getElementById('chatPre');
    pre.style.display = 'none';
  }

  async function startChat(){
    const name = document.getElementById('chatName').value.trim();
    const email = document.getElementById('chatEmail').value.trim();
    const form = new FormData();
    form.append('action','identify');
    form.append('name', name);
    form.append('email', email);
    const res = await fetch(api, {method:'POST', body: form, credentials:'same-origin'});
    const data = await res.json();
    if (!data.ok) {
      const hint = document.getElementById('chatPreHint');
      hint.textContent = data.error || 'Unable to start chat.';
      return;
    }
    active = true;
    hidePre();
    enableComposer(true);
    // force fresh poll
    lastId = 0;
    document.getElementById('chatMessages').innerHTML='';
    poll();
  }

  function showPanel(){ document.getElementById('chatPanel').style.display='block'; open=true; init(); }
  function hidePanel(){ document.getElementById('chatPanel').style.display='none'; open=false; }

  async function init(){
    const res = await fetch(api + '?action=init', {credentials:'same-origin'});
    const data = await res.json();
    if (!data.ok) return;
    requireName = !!data.require_name;
    requireEmail = !!data.require_email;
    const needs = !!data.needs_identity;
    if (needs) {
      active = false;
      showPre(requireName, requireEmail);
    } else {
      active = true;
      hidePre();
      enableComposer(true);
      poll();
    }
  }

  async function poll(){
    if (!open) return;
    try {
      const res = await fetch(api + '?action=poll&since_id=' + encodeURIComponent(lastId), {credentials:'same-origin'});
      const data = await res.json();
      if (!data.ok) return;
      const box = document.getElementById('chatMessages');
      data.messages.forEach(m => {
        lastId = Math.max(lastId, parseInt(m.id));
        const div = document.createElement('div');
        div.className = 'chat-msg ' + (m.sender === 'admin' ? 'admin':'user');
        div.innerHTML = '<div class="bubble">' + e(m.message) + '<div class="small text-muted mt-1">' + e(new Date(m.created_at).toLocaleTimeString()) + '</div></div>';
        box.appendChild(div);
      });
      if (data.messages.length) { box.scrollTop = box.scrollHeight; }
    } catch(err) {}
    setTimeout(poll, 3000);
  }

  async function send(){
    if (!active) { showPre(requireName, requireEmail); return; }
    const input = document.getElementById('chatInput');
    const msg = input.value.trim();
    if (!msg) return;
    const form = new FormData();
    form.append('action','send');
    form.append('message', msg);
    const res = await fetch(api, {method:'POST', body: form, credentials:'same-origin'});
    const data = await res.json();
    if (data.ok) {
      input.value='';
      // Force refresh
      lastId = 0;
      document.getElementById('chatMessages').innerHTML='';
      poll();
    } else {
      // Optional: show error to user
      const hint = document.getElementById('chatPreHint');
      if (hint && (data.error_code === 'rate_limited' || data.error_code === 'duplicate' || data.error_code === 'message_too_long')) {
        hint.textContent = data.error;
        hint.style.color = '#dc2626';
        setTimeout(()=>{ hint.textContent=''; hint.style.color=''; }, 4000);
      }
    }
  }

  async function endChat(){
    const res = await fetch(api + '?action=close', {credentials:'same-origin'});
    const data = await res.json();
    // Reset state regardless of response
    active = false;
    lastId = 0;
    document.getElementById('chatMessages').innerHTML='';
    enableComposer(false);
    hidePanel();
  }

  document.getElementById('chatToggle').addEventListener('click', function(){
    if (open) hidePanel(); else showPanel();
  });
  document.getElementById('chatClose').addEventListener('click', hidePanel);
  document.getElementById('chatEnd').addEventListener('click', endChat);
  document.getElementById('chatStart').addEventListener('click', startChat);
  document.getElementById('chatSend').addEventListener('click', send);
  document.getElementById('chatInput').addEventListener('keyup', function(e){ if (e.key==='Enter') send(); });
  // Very lightweight emoji picker
  (function(){
    var btn = document.getElementById('chatEmoji');
    if (!btn) return;
    var picker; var openPicker=false;
    var emojis = ['😀','😁','😂','🤣','😊','😍','😘','👍','👏','🙏','🎉','💯','🔥','🌟','💡','🚀','💖'];
    btn.addEventListener('click', function(){
      if (openPicker) { picker.remove(); openPicker=false; return; }
      picker = document.createElement('div');
      picker.style.position='absolute'; picker.style.bottom='56px'; picker.style.right='16px';
      picker.style.background='#fff'; picker.style.border='1px solid #e5e7eb'; picker.style.borderRadius='10px'; picker.style.padding='6px'; picker.style.boxShadow='0 8px 24px rgba(0,0,0,.15)';
      emojis.forEach(function(em){ var b=document.createElement('button'); b.type='button'; b.className='btn btn-sm'; b.style.fontSize='18px'; b.textContent=em; b.addEventListener('click', function(){ var i=document.getElementById('chatInput'); i.value += em; i.focus(); }); picker.appendChild(b); });
      document.getElementById('chatWidget').appendChild(picker); openPicker=true;
    });
    document.addEventListener('click', function(ev){ if (openPicker && picker && !btn.contains(ev.target) && !picker.contains(ev.target)) { picker.remove(); openPicker=false; } });
  })();

  function showPanel(){ document.getElementById('chatPanel').style.display='block'; open=true; poll(); }
  function hidePanel(){ document.getElementById('chatPanel').style.display='none'; open=false; }

  async function init(){
    await fetch(api + '?action=init', {credentials:'same-origin'});
    poll();
  }

  async function poll(){
    if (!open) return;
    try {
      const res = await fetch(api + '?action=poll&since_id=' + encodeURIComponent(lastId), {credentials:'same-origin'});
      const data = await res.json();
      if (!data.ok) return;
      const box = document.getElementById('chatMessages');
      data.messages.forEach(m => {
        lastId = Math.max(lastId, parseInt(m.id));
        const div = document.createElement('div');
        div.className = 'chat-msg ' + (m.sender === 'admin' ? 'admin':'user');
        div.innerHTML = '<div class="bubble">' + e(m.message) + '<div class="small text-muted mt-1">' + e(new Date(m.created_at).toLocaleTimeString()) + '</div></div>';
        box.appendChild(div);
      });
      if (data.messages.length) { box.scrollTop = box.scrollHeight; }
    } catch(err) {}
    setTimeout(poll, 3000);
  }

  async function send(){
    const input = document.getElementById('chatInput');
    const msg = input.value.trim();
    if (!msg) return;
    const form = new FormData();
    form.append('action','send');
    form.append('message', msg);
    const res = await fetch(api, {method:'POST', body: form, credentials:'same-origin'});
    const data = await res.json();
    if (data.ok) {
      input.value='';
      // Force refresh
      lastId = 0;
      document.getElementById('chatMessages').innerHTML='';
      poll();
    }
  }

  document.getElementById('chatToggle').addEventListener('click', function(){
    if (open) hidePanel(); else showPanel();
  });
  document.getElementById('chatClose').addEventListener('click', hidePanel);
  document.getElementById('chatSend').addEventListener('click', send);
  document.getElementById('chatInput').addEventListener('keyup', function(e){ if (e.key==='Enter') send(); });
  // Very lightweight emoji picker
  (function(){
    var btn = document.getElementById('chatEmoji');
    if (!btn) return;
    var picker; var open=false;
    var emojis = ['😀','😁','😂','🤣','😊','😍','😘','👍','👏','🙏','🎉','💯','🔥','🌟','💡','🚀','💖'];
    btn.addEventListener('click', function(){
      if (open) { picker.remove(); open=false; return; }
      picker = document.createElement('div');
      picker.style.position='absolute'; picker.style.bottom='56px'; picker.style.right='16px';
      picker.style.background='#fff'; picker.style.border='1px solid #e5e7eb'; picker.style.borderRadius='10px'; picker.style.padding='6px'; picker.style.boxShadow='0 8px 24px rgba(0,0,0,.15)';
      emojis.forEach(function(em){ var b=document.createElement('button'); b.type='button'; b.className='btn btn-sm'; b.style.fontSize='18px'; b.textContent=em; b.addEventListener('click', function(){ var i=document.getElementById('chatInput'); i.value += em; i.focus(); }); picker.appendChild(b); });
      document.getElementById('chatWidget').appendChild(picker); open=true;
    });
    document.addEventListener('click', function(ev){ if (open && picker && !btn.contains(ev.target) && !picker.contains(ev.target)) { picker.remove(); open=false; } });
  })();

  init();
})();
</script>
<?php endif; ?>
</body>
</html>
